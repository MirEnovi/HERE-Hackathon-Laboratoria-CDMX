{"version":3,"sources":["assets/school.png","config/firebase.js","components/Calendar.jsx","config/urls.js","components/Button.jsx","components/Geolocation.jsx","components/SignIn.jsx","components/AddNewR.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","auth","initSesion","email","password","signInWithEmailAndPassword","then","res","console","log","catch","error","errorCode","code","errorMessage","message","logout","signOut","concat","Calendar","react_default","a","createElement","type","step","className","class","fetchGeocode","number","street","cp","newWaypoint","latB","lngB","Button","props","Fragment","onClick","Geolocation","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","offSesion","state","value","url","_this2","navigator","geolocation","getCurrentPosition","position","latA","lngA","coords","latitude","longitude","setState","components_Button","src","alt","Component","SignIn","signIn","u","user","current","login","React","createRef","Imagen","placeholder","ref","lib","waves","AddNewRute","fetchGeo","urlFetch","fetch","resp","json","result","Response","View","Result","Location","DisplayPosition","Latitude","Longitude","App","onSesion","uid","onAuthStateChanged","components_Geolocation","components_Calendar","AddNewR","components_SignIn","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06adb092.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/school.bb2d5277.png\";","import firebase from 'firebase'; \r\n\r\nconst firebaseCredentials = {\r\n    apiKey: \"AIzaSyCB9127rzCO2-_faUKn0_Gl2YnHa_kAgiI\",\r\n    authDomain: \"hackathon-here-laboratoriacdmx.firebaseapp.com\",\r\n    databaseURL: \"https://hackathon-here-laboratoriacdmx.firebaseio.com\",\r\n    projectId: \"hackathon-here-laboratoriacdmx\",\r\n    storageBucket: \"hackathon-here-laboratoriacdmx.appspot.com\",\r\n    messagingSenderId: \"906777205290\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseCredentials);\r\nexport const auth = firebase.auth();\r\n\r\nexport default firebase;\r\n\r\nexport const initSesion = (email, password) => {\r\n\tauth.signInWithEmailAndPassword(email, password)\r\n\t\t.then((res) => { \r\n\t\t\tconsole.log('logueado ' + res);\r\n\t\t\treturn})\r\n\t\t.catch((error) => {\r\n\t\t\t// Handle Errors here.\r\n\t\t\tconst errorCode = error.code;\r\n\t\t\tconst errorMessage = error.message;\r\n\t\t\tconsole.log(errorCode, errorMessage);\r\n\t\t});\r\n    \r\n};\r\n\r\nexport const logout = () => {\r\n\tauth.signOut().then(() => {\r\n\t\tconsole.log('Desconectado')\r\n\t\treturn\r\n\t})\r\n\t.catch((error) => console.log(`Error: ${error.code}: ${error.message}`));\t\r\n};","import React from 'react';\r\n\r\nconst Calendar = () => {\r\n\treturn (\r\n\t\t<section>\r\n\t\t\t<input type=\"date\" step=\"1\" />\r\n\t\t\t<button className='btn-floating btn-large waves-effect waves-light red'><i class=\"material-icons\">add</i></button>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default Calendar;","export \tconst UrlRutes = (latA, lngA) => {\r\n\tconst url= `https://image.maps.api.here.com/mia/1.6/routing?app_id=F2NFi480TAeaCU2fjGmC&app_code=DvU41ZrLHlIVBDtOruPEqg&waypoint0=${latA},${lngA}&waypoint1=19.451,-99.166&poix0=${latA},${lngA};00a3f2;00a3f2;11;.&poix1=19.451,-99.166;white;white;11;.&lc=1652B4&lw=6&t=0&ppi=320&w=250&h=300`;\r\n\r\n\treturn url;\r\n}\r\n\r\nexport const fetchGeocode = (number,street,cp) => {\r\n\tconst urlGeocode = `https://geocoder.api.here.com/6.2/geocode.json?app_id=F2NFi480TAeaCU2fjGmC&app_code=DvU41ZrLHlIVBDtOruPEqg&searchtext=${number}+${street}+${cp}+mexico+city`;\r\n\r\n\treturn urlGeocode;\r\n};\r\n\r\nexport const newWaypoint = (latB, lngB) => {\r\n\tconst urlNewWaypoint = `https://image.maps.api.here.com/mia/1.6/mapview?app_id=F2NFi480TAeaCU2fjGmC&app_code=DvU41ZrLHlIVBDtOruPEqg&lat=${latB}&lon=${lngB}&vt=0&z=14`;\r\n\treturn urlNewWaypoint;\r\n}","import React from 'react';\r\n\r\nconst Button = (props) => {\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <button onClick={props.logout} >Salir</button>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Button;","import React, {Component} from 'react';\r\nimport { logout } from '../config/firebase';\r\n\r\nimport { UrlRutes } from '../config/urls';\r\nimport Button from './Button';\r\n\r\n\r\nclass Geolocation extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\tvalue: '0,0',\r\n\t\t\terror: null,\r\n\t\t\turl: null\r\n\t\t}\r\n\t}\r\n\tcomponentWillMount() {\r\n\t\tif (navigator.geolocation) {\r\n\t\t\tnavigator.geolocation.getCurrentPosition(\r\n\t\t\t\t(position) => {\r\n\t\t\t\t\tconst url = UrlRutes(position.coords.latitude, position.coords.longitude);\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\turl,\r\n\t\t\t\t\t\tvalue: position.coords.latitude + ',' + position.coords.longitude,\r\n\t\t\t\t\t\terror: null,\r\n\t\t\t\t\t});\r\n\t\t\t\t},\r\n\t\t\t\t(error) => this.setState(\r\n\t\t\t\t\t{error: error.message}\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\r\n\t// changeLocation (event) {\r\n\t// \tthis.setState({\r\n\t// \t\tvalue: event.target.value\r\n\t// \t})\r\n\t// }\r\n\t\r\n\toffSesion = () => {\r\n\t\tlogout();\r\n\t\t\r\n\t  }\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Button logout={this.offSesion}/>\r\n\t\t\t\t{/* <input className='input-geo' value={this.state.value} onChange={event=>this.changeLocation(event)}/> */}\r\n\t\t\t\t<img src = {this.state.url} alt='map'/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n\r\n}\r\nexport default Geolocation;","import React, { Component } from \"react\";\r\nimport { Button, Input } from \"react-materialize\";\r\nimport Imagen from \"../assets/school.png\";\r\n// import {Link} from 'react-router-dom'\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.user = React.createRef();\r\n    this.password = React.createRef();\r\n  }\r\n\r\n  signIn = () => {\r\n\t\tconst u = {\r\n\t\t\tuser:this.user.current.value,\r\n\t\t\tpassword:this.password.current.value\r\n    };\r\n\t\tthis.props.login(u.user, u.password);\r\n\t};\r\n\r\n  render() {\r\n    const { user, password } = this;\r\n    return (\r\n      <section className=\"login-section\">\r\n        <img className=\"school\" src={Imagen} alt = 'school-logo'/>\r\n        <h1>CaminApp</h1>\r\n        <div className=\"form\">\r\n          <input className=\"col s3 offset-s1\" type=\"email\" placeholder=\"Email\" ref = {user}/>\r\n          <input className=\"col s3\" type=\"password\" placeholder=\"password\" ref = {password}/>\r\n          <Button waves=\"light\"onClick={this.signIn}>\r\n            Login\r\n          </Button>\r\n          <p>¿Olvidaste tu contraseña?</p>\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SignIn;\r\n","import React, {Component} from 'react';\r\nimport {fetchGeocode, newWaypoint} from '../config/urls';\r\n\r\n\r\nclass AddNewRute extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\turl: null\r\n\t\t}\r\n    this.street = React.createRef();\r\n\t\tthis.number = React.createRef();\r\n    this.cp = React.createRef();\r\n\t\t\r\n  }\r\n\r\n\tfetchGeo = () => {\r\n\t\tconst street =this.street.current.value;\r\n\t\tconst number =this.number.current.value;\r\n\t\tconst cp =this.cp.current.value;\r\n\t\tconst urlFetch = fetchGeocode(street, number, cp);\r\n\t\tfetch(urlFetch)\r\n\t\t.then(resp => resp.json())\r\n\t\t.then((result) => {\r\n\t\t\tconst latB = result.Response.View[0].Result[0].Location.DisplayPosition.Latitude;\r\n\t\t\tconst lngB = result.Response.View[0].Result[0].Location.DisplayPosition.Longitude;\r\n\t\t\tconst url= newWaypoint(latB, lngB);\r\n\t\t\tthis.setState({\r\n\t\t\t\turl\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\trender(){\r\n\t\tconst { street, number,cp } = this;\r\n\t\treturn (\r\n\t\t\t<section>\r\n\t\t\t\t<input type=\"text\" placeholder=\"calle\" ref = {street}/>\r\n\t\t\t\t<input type=\"text\" placeholder=\"numero\" ref = {number}/>\r\n\t\t\t\t<input type=\"text\" placeholder=\"CP\" ref = {cp}/>\r\n\t\t\t\t<button onClick={this.fetchGeo}>fetch</button>\r\n\t\t\t\t<img src = {this.state.url} alt = 'Nueva punto de partida'/>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AddNewRute;","import React, { Component } from 'react';\r\n\r\nimport { initSesion, auth } from './config/firebase';\r\n\r\nimport Calendar from './components/Calendar';\r\nimport Geolocation from './components/Geolocation';\r\nimport SignIn from './components/SignIn';\r\nimport AddNewRute from './components/AddNewR';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  constructor () {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t  uid: null,\r\n\t\t}\r\n\t}\r\n\r\n  componentWillMount () {\r\n    auth.onAuthStateChanged(user => {\r\n\t\t\t// console.log(user.uid);\r\n      this.setState({\r\n        uid: user.uid\r\n      })\r\n    })\r\n  }\r\n  onSesion = (email, password) => {\r\n    initSesion(email, password);\r\n  };\r\n\r\n  render() {\r\n    const {uid} = this.state;\r\n    if(uid) {\r\n      return (\r\n        <div className=\"App\">\r\n          <Geolocation/>\r\n          <Calendar/>\r\n          <AddNewRute/>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n      <div className=\"App\">\r\n        <SignIn login= {this.onSesion}/>\r\n      </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}